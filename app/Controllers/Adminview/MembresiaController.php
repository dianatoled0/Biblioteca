<?php 
namespace App\Controllers\Adminview;

use App\Controllers\BaseController;
use App\Models\TipoMembresiaModel;
use App\Models\UsuarioModel; // Necesario para la vista de detalle

class MembresiaController extends BaseController
{
    protected $tipoMembresiaModel;
    protected $usuarioModel;
    
    public function __construct()
    {
        $this->tipoMembresiaModel = new TipoMembresiaModel();
        $this->usuarioModel = new UsuarioModel();
        helper('url');
    }

    // Muestra el listado de los 3 tipos de membresÃ­a
    public function index()
    {
        // NOTA: Para replicar el formato de la tabla de Discos, necesitamos construir 
        // un array que combine los datos de la DB con las caracterÃ­sticas fijas.
        $membresias_db = $this->tipoMembresiaModel->findAll();

        $membresias_completas = [];
        
        // Las caracterÃ­sticas fijas segÃºn tu solicitud
        $caracteristicas = [
            1 => [ // ID 1: BÃ¡sica
                'icono' => 'ðŸŽµ',
                'desc' => '5% de descuento en discos seleccionados. Acceso anticipado a lanzamientos. BoletÃ­n mensual.'
            ],
            2 => [ // ID 2: EstÃ¡ndar
                'icono' => 'ðŸ’¿',
                'desc' => '10% de descuento en discos y artÃ­culos. EnvÃ­o gratuito en compras > Q250. Doble acumulaciÃ³n de puntos.'
            ],
            3 => [ // ID 3: Premium
                'icono' => 'ðŸ”¥',
                'desc' => '15â€“20% de descuento en toda la tienda. Entrada prioritaria a preventas. Kit de bienvenida.'
            ]
        ];

        // Combinar datos
        foreach ($membresias_db as $membresia) {
            $id = $membresia['id'];
            // Se aÃ±ade el chequeo isset para evitar errores si un ID de membresÃ­a de la DB no estÃ¡ en $caracteristicas
            if (isset($caracteristicas[$id])) {
                $membresias_completas[] = [
                    'id'          => $id,
                    'nombre'      => $caracteristicas[$id]['icono'] . ' MembresÃ­a ' . $membresia['nombre'],
                    'precio'      => $membresia['precio'],
                    'duracion'    => $membresia['duracion_meses'],
                    'caracteristicas' => $caracteristicas[$id]['desc']
                ];
            } else {
                // Alternativa por si falta la configuraciÃ³n de caracterÃ­sticas
                 $membresias_completas[] = [
                    'id'          => $id,
                    'nombre'      => 'MembresÃ­a ' . $membresia['nombre'],
                    'precio'      => $membresia['precio'],
                    'duracion'    => $membresia['duracion_meses'],
                    'caracteristicas' => 'Sin descripciÃ³n.'
                ];
            }
        }

        $data = [
            'membresias' => $membresias_completas,
            'titulo'     => 'GestiÃ³n de MembresÃ­as'
        ];
        
        return view('admin/membresias/index', $data);
    }

    // Muestra los usuarios asignados a una membresÃ­a especÃ­fica
    public function usuarios($idMembresia = null)
    {
        if (empty($idMembresia) || !is_numeric($idMembresia)) {
            session()->setFlashdata('error', 'MembresÃ­a no vÃ¡lida.');
            return redirect()->to(base_url('admin/membresias'));
        }

        $membresia = $this->tipoMembresiaModel->find($idMembresia);

        if (!$membresia) {
            session()->setFlashdata('error', 'MembresÃ­a no encontrada.');
            return redirect()->to(base_url('admin/membresias'));
        }

        $usuarios = $this->usuarioModel->getUsuariosByMembresia($idMembresia);
        
        $data = [
            'membresia' => $membresia,
            'usuarios'  => $usuarios,
            'titulo'    => 'Usuarios de la MembresÃ­a: ' . $membresia['nombre']
        ];

        // CORRECCIÃ“N FINAL: Se remueven los asteriscos innecesarios.
        // La vista es 'app/Views/admin/membresias/detalle_usuarios.php'
        return view('admin/membresias/detalle_usuarios', $data); // <-- LÃ­nea 101 corregida
    }
    
    // NOTA: Debes incluir aquÃ­ los mÃ©todos crearMembresia, editarMembresia y eliminarMembresia si existen.
}
